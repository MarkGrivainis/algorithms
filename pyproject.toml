[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "algorithms"
dynamic = ["version"]
license = { text = "MIT" }
readme = "README.rst"
requires-python = ">=3.8"
dependencies = ["rich==13.7.0", "click==8.1.7"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'Natural Language :: English',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.6',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
]
description = "My implementations of various algorithms"
keywords = ['algorithms']

[project.optional-dependencies]
dev = [
  "bump-my-version==0.16.2",
  "watchdog==3.0.0",
  "nox==2023.4.22",
  "coverage==7.4.0",
  "Sphinx==7.2.6",
  "twine==4.0.2",
  "pytest==7.4.4",
  "ruff==0.1.13",
  "python-lsp-server==1.4.0",
  "pylsp-rope==0.1.11",
  "debugpy==1.8.0",
  "mypy==1.8.0",
  "bandit==1.7.6",
]


[project.scripts]
tipseq_analysis = "algorithms.cli:main"

[tool.setuptools.dynamic]
version = { attr = "algorithms.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"algorithms" = ["py.typed"]

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = true

[[tool.bumpversion.files]]
file = "src/algorithms/__init__.py"
search = "__version__='{current_version}'"
replace = "__version__='{new_version}'"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "D",   # pydocstyle
  "C4",  # flake8-comprehensions
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
  "YTT", # flake8-2020
]
ignore = ["D203", "D212", "ISC001"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.mypy]
python_version = "3.11"
files = ["src/algorithms"]
show_error_codes = true
pretty = true
strict = true
local_partial_types = true
exclude = ["^tests/"]
warn_unreachable = true

[tool.pytest.ini_options]
pythonpath = ["src"]
